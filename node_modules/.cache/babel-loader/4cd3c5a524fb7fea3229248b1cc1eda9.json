{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react/hooks/src/components/ResourceList.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass ResourceList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      resources: []\n    };\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(\"https://jsonplaceholder.typicode.com/\".concat(this.props.resourceName));\n    this.setState({\n      resources: response.data\n    });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.resourceName !== this.props.resourceName) {\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/\".concat(this.props.resourceName));\n      this.setState({\n        resources: response.data\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.resources.map(resource => React.createElement(\"li\", {\n      key: resource.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, resource.title)));\n  }\n\n}\n\nexport default ResourceList;","map":{"version":3,"sources":["/opt/lampp/htdocs/react/hooks/src/components/ResourceList.js"],"names":["React","axios","ResourceList","Component","state","resources","componentDidMount","response","get","props","resourceName","setState","data","componentDidUpdate","prevProps","render","map","resource","id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACNC,MAAAA,SAAS,EAAE;AADL,KADiC;AAAA;;AAKzC,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,gDAAkD,KAAKC,KAAL,CAAWC,YAA7D,EAAvB;AAEA,SAAKC,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAEE,QAAQ,CAACK;AAAtB,KAAd;AACD;;AAED,QAAMC,kBAAN,CAAyBC,SAAzB,EAAoC;AAClC,QAAGA,SAAS,CAACJ,YAAV,KAA2B,KAAKD,KAAL,CAAWC,YAAzC,EAAuD;AACrD,YAAMH,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,gDAAkD,KAAKC,KAAL,CAAWC,YAA7D,EAAvB;AAEA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAEE,QAAQ,CAACK;AAAtB,OAAd;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWC,SAAX,CAAqBW,GAArB,CAAyBC,QAAQ,IAChC;AAAI,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBD,QAAQ,CAACE,KAAhC,CADD,CADH,CADF;AAOD;;AA3BwC;;AA8B3C,eAAejB,YAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass ResourceList extends React.Component {\n  state = {\n    resources: [],\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\n\n    this.setState({ resources: response.data });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.resourceName !== this.props.resourceName) {\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\n\n      this.setState({ resources: response.data });\n    }\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.resources.map(resource => (\n          <li key={resource.id}>{resource.title}</li>\n        ))}\n      </ul>\n    )\n  }\n}\n\nexport default ResourceList;\n"]},"metadata":{},"sourceType":"module"}