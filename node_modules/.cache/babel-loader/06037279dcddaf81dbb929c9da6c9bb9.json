{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/react/hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/react/hooks/src/components/ResourceList.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\n/* class ResourceList extends React.Component {\n  state = {\n    resources: [],\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\n\n    this.setState({ resources: response.data });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.resourceName !== this.props.resourceName) {\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\n\n      this.setState({ resources: response.data });\n    }\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.resources.map(resource => (\n          <li key={resource.id}>{resource.title}</li>\n        ))}\n      </ul>\n    )\n  }\n}\n\n*/\n\nconst ResourceList = () => {\n  const _useState = useState('posts'),\n        _useState2 = _slicedToArray(_useState, 2),\n        resourceName = _useState2[0],\n        setressourceName = _useState2[1];\n\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, this.state.resources.map(resource => React.createElement(\"li\", {\n    key: resource.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, resource.title)));\n};\n\nexport default App;","map":{"version":3,"sources":["/opt/lampp/htdocs/react/hooks/src/components/ResourceList.js"],"names":["React","useState","axios","ResourceList","resourceName","setressourceName","state","resources","map","resource","id","title","App"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,MAAMC,YAAY,GAAG,MAAM;AAAA,oBAEgBF,QAAQ,CAAC,OAAD,CAFxB;AAAA;AAAA,QAElBG,YAFkB;AAAA,QAEJC,gBAFI;;AAGzB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyBC,QAAQ,IAChC;AAAI,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,QAAQ,CAACE,KAAhC,CADD,CADH,CADF;AAOD,CAVD;;AAaA,eAAeC,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\n\n/* class ResourceList extends React.Component {\n  state = {\n    resources: [],\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\n\n    this.setState({ resources: response.data });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.resourceName !== this.props.resourceName) {\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\n\n      this.setState({ resources: response.data });\n    }\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.resources.map(resource => (\n          <li key={resource.id}>{resource.title}</li>\n        ))}\n      </ul>\n    )\n  }\n}\n\n*/\n\nconst ResourceList = () => {\n\n  const [resourceName, setressourceName] = useState('posts')\n  return (\n    <ul>\n      {this.state.resources.map(resource => (\n        <li key={resource.id}>{resource.title}</li>\n      ))}\n    </ul>\n  )\n}\n\n \nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}