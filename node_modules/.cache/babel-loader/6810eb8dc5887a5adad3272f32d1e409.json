{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/react/hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/react/hooks/src/components/ResourceList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n/* class ResourceList extends React.Component {\n  state = {\n    resources: [],\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\n\n    this.setState({ resources: response.data });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.resourceName !== this.props.resourceName) {\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\n\n      this.setState({ resources: response.data });\n    }\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.resources.map(resource => (\n          <li key={resource.id}>{resource.title}</li>\n        ))}\n      </ul>\n    )\n  }\n}\n\n*/\n\nconst ResourceList = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        resources = _useState2[0],\n        setresources = _useState2[1];\n\n  useEffect(() => {}, [input]);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, resources.map(resource => React.createElement(\"li\", {\n    key: resource.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, resource.title)));\n};\n\nexport default ResourceList;","map":{"version":3,"sources":["/opt/lampp/htdocs/react/hooks/src/components/ResourceList.js"],"names":["React","useState","useEffect","axios","ResourceList","resources","setresources","input","map","resource","id","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,MAAMC,YAAY,GAAG,MAAM;AAAA,oBAESH,QAAQ,CAAC,EAAD,CAFjB;AAAA;AAAA,QAElBI,SAFkB;AAAA,QAEPC,YAFO;;AAIzBJ,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACK,KAAD,CAFM,CAAT;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IACrB;AAAI,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,QAAQ,CAACE,KAAhC,CADD,CADH,CADF;AAOD,CAhBD;;AAmBA,eAAeP,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\n/* class ResourceList extends React.Component {\n  state = {\n    resources: [],\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\n\n    this.setState({ resources: response.data });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.resourceName !== this.props.resourceName) {\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/${this.props.resourceName}`);\n\n      this.setState({ resources: response.data });\n    }\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.resources.map(resource => (\n          <li key={resource.id}>{resource.title}</li>\n        ))}\n      </ul>\n    )\n  }\n}\n\n*/\n\nconst ResourceList = () => {\n\n  const [resources, setresources] = useState('');\n\n  useEffect(() => {\n  \n  }, [input]);\n\n\n  return (\n    <ul>\n      {resources.map(resource => (\n        <li key={resource.id}>{resource.title}</li>\n      ))}\n    </ul>\n  )\n}\n\n \nexport default ResourceList;\n\n"]},"metadata":{},"sourceType":"module"}